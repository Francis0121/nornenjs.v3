#!/usr/bin/env node

var http = require('http'),
    url = require('url'),
    fs = require('fs'),
    path = require('path'),
    os = require('os');

var interfaces = os.networkInterfaces();
var ipAddress = null;
for (var k in interfaces) {
    for (var k2 in interfaces[k]) {
        var address = interfaces[k][k2];
        if (address.family === 'IPv4' && !address.internal && ipAddress == null) {
            ipAddress = address.address;
        }
    }
}

var server = http.createServer(function(request, response){
    
    var reqUrl = url.parse(request.url, true);
    
    fs.readFile(path.join(__dirname, './index.html'), function(err, data){
        if(err){
            response.writeHead(404, {'Content-type' : 'text/plain'});
            response.end('404 Not Found\n');
            throw err;
        }

        var volumePrimaryPn = reqUrl.pathname.replace('/', '');
        if(volumePrimaryPn === '' || (volumePrimaryPn != 1 && volumePrimaryPn != 2)){
            volumePrimaryPn = 1;
        }
        
        var html = data.toString()
            .replace(/\$\{volumePrimaryPn\}/gi, volumePrimaryPn)
            .replace(/\$\{ipAddress\}/gi, ipAddress);
        
        response.writeHead(200, {'Content-type' : 'text/html'});
        response.end(html);
    });
    
}).listen(5000, function() {
    console.log('Server listening on port ' + server.address().port);
});

// ~ Create nornenjs server
var NornenjsServer = require('../lib/server').NornenjsServer;
var nornenjsServer = new NornenjsServer(server, 5005, 512);
nornenjsServer.connect();
