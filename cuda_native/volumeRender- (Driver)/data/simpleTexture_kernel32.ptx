	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v6.0\bin/../open64/lib//be.exe
	// nvopencc 4.1 built on 2014-03-14

	//-----------------------------------------------------------
	// Compiling C:/Users/russa/AppData/Local/Temp/tmpxft_00001278_00000000-15_simpleTexture_kernel.cpp3.i (C:/Users/russa/AppData/Local/Temp/ccBI#.a03596)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"C:/Users/russa/AppData/Local/Temp/tmpxft_00001278_00000000-14_simpleTexture_kernel.cudafe2.gpu"
	.file	2	"c:/Users/russa/Desktop/삼성 소프트웨어/창의과제/창의과제(개발)/volumeRender- (Driver)/simpleTexture_kernel.cu"
	.file	3	"c:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
	.file	4	"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include\crt/device_runtime.h"
	.file	5	"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include\host_defines.h"
	.file	6	"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include\builtin_types.h"
	.file	7	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\device_types.h"
	.file	8	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\host_defines.h"
	.file	9	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\driver_types.h"
	.file	10	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\surface_types.h"
	.file	11	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\texture_types.h"
	.file	12	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\vector_types.h"
	.file	13	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\builtin_types.h"
	.file	14	"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include\device_launch_parameters.h"
	.file	15	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\crt\storage_class.h"
	.file	16	"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include\helper_math.h"
	.file	17	"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include\common_functions.h"
	.file	18	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\math_functions.h"
	.file	19	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\math_constants.h"
	.file	20	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\device_functions.h"
	.file	21	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_11_atomic_functions.h"
	.file	22	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_12_atomic_functions.h"
	.file	23	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_13_double_functions.h"
	.file	24	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_20_atomic_functions.h"
	.file	25	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_32_atomic_functions.h"
	.file	26	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_35_atomic_functions.h"
	.file	27	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_20_intrinsics.h"
	.file	28	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_30_intrinsics.h"
	.file	29	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_32_intrinsics.h"
	.file	30	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\sm_35_intrinsics.h"
	.file	31	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\surface_functions.h"
	.file	32	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\texture_fetch_functions.h"
	.file	33	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\texture_indirect_functions.h"
	.file	34	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\surface_indirect_functions.h"
	.file	35	"c:\program files\nvidia gpu computing toolkit\cuda\v6.0\include\math_functions_dbl_ptx1.h"

	.tex .u32 tex;

	.entry transformKernel (
		.param .u32 __cudaparm_transformKernel_d_output,
		.param .u32 __cudaparm_transformKernel_d_invViewMatrix,
		.param .u32 __cudaparm_transformKernel_imageW,
		.param .u32 __cudaparm_transformKernel_imageH,
		.param .f32 __cudaparm_transformKernel_density,
		.param .f32 __cudaparm_transformKernel_brightness,
		.param .f32 __cudaparm_transformKernel_transferOffset,
		.param .f32 __cudaparm_transformKernel_transferScale)
	{
	.reg .u16 %rh<6>;
	.reg .u32 %r<35>;
	.reg .f32 %f<121>;
	.reg .pred %p<5>;
	.loc	2	97	0
$LDWbegin_transformKernel:
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	mov.u16 	%rh3, %ctaid.y;
	mov.u16 	%rh4, %ntid.y;
	mul.wide.u16 	%r2, %rh3, %rh4;
	cvt.u32.u16 	%r3, %tid.x;
	add.u32 	%r4, %r3, %r1;
	cvt.u32.u16 	%r5, %tid.y;
	add.u32 	%r6, %r5, %r2;
	ld.param.u32 	%r7, [__cudaparm_transformKernel_imageH];
	ld.param.u32 	%r8, [__cudaparm_transformKernel_imageW];
	set.ge.u32.u32 	%r9, %r4, %r8;
	neg.s32 	%r10, %r9;
	set.ge.u32.u32 	%r11, %r6, %r7;
	neg.s32 	%r12, %r11;
	or.b32 	%r13, %r10, %r12;
	mov.u32 	%r14, 0;
	setp.eq.s32 	%p1, %r13, %r14;
	@%p1 bra 	$Lt_0_2818;
	bra.uni 	$LBB7_transformKernel;
$Lt_0_2818:
	.loc	2	68	0
	ld.param.u32 	%r15, [__cudaparm_transformKernel_d_invViewMatrix];
	ld.global.f32 	%f1, [%r15+0];
	ld.global.f32 	%f2, [%r15+8];
	mov.f32 	%f3, 0f00000000;     	// 0
	mov.f32 	%f4, 0f00000000;     	// 0
	mad.f32 	%f5, %f1, %f4, %f3;
	mov.f32 	%f6, 0f00000000;     	// 0
	mad.f32 	%f7, %f2, %f6, %f5;
	ld.global.f32 	%f8, [%r15+12];
	mov.f32 	%f9, 0f3f800000;     	// 1
	mad.f32 	%f10, %f8, %f9, %f7;
	.loc	2	69	0
	ld.global.f32 	%f11, [%r15+16];
	ld.global.f32 	%f12, [%r15+24];
	mov.f32 	%f13, 0f00000000;    	// 0
	mov.f32 	%f14, 0f00000000;    	// 0
	mad.f32 	%f15, %f11, %f14, %f13;
	mov.f32 	%f16, 0f00000000;    	// 0
	mad.f32 	%f17, %f12, %f16, %f15;
	ld.global.f32 	%f18, [%r15+28];
	mov.f32 	%f19, 0f3f800000;    	// 1
	mad.f32 	%f20, %f18, %f19, %f17;
	.loc	2	70	0
	ld.global.f32 	%f21, [%r15+32];
	ld.global.f32 	%f22, [%r15+40];
	mov.f32 	%f23, 0f00000000;    	// 0
	mov.f32 	%f24, 0f00000000;    	// 0
	mad.f32 	%f25, %f21, %f24, %f23;
	mov.f32 	%f26, 0f00000000;    	// 0
	mad.f32 	%f27, %f22, %f26, %f25;
	ld.global.f32 	%f28, [%r15+44];
	mov.f32 	%f29, 0f3f800000;    	// 1
	mad.f32 	%f30, %f28, %f29, %f27;
	.loc	2	97	0
	ld.param.u32 	%r7, [__cudaparm_transformKernel_imageH];
	.loc	2	56	0
	cvt.rn.f32.u32 	%f31, %r7;
	.loc	2	97	0
	ld.param.u32 	%r8, [__cudaparm_transformKernel_imageW];
	.loc	2	56	0
	cvt.rn.f32.u32 	%f32, %r8;
	cvt.rn.f32.u32 	%f33, %r4;
	cvt.rn.f32.u32 	%f34, %r6;
	div.full.f32 	%f35, %f33, %f32;
	div.full.f32 	%f36, %f34, %f31;
	add.f32 	%f37, %f35, %f35;
	add.f32 	%f38, %f36, %f36;
	mov.f32 	%f39, 0fbf800000;    	// -1
	add.f32 	%f40, %f37, %f39;
	mov.f32 	%f41, 0fbf800000;    	// -1
	add.f32 	%f42, %f38, %f41;
	mul.f32 	%f43, %f42, %f42;
	mad.f32 	%f44, %f40, %f40, %f43;
	mov.f32 	%f45, 0f40800000;    	// 4
	add.f32 	%f46, %f44, %f45;
	rsqrt.approx.f32 	%f47, %f46;
	mul.f32 	%f48, %f42, %f47;
	mul.f32 	%f49, %f40, %f47;
	mov.f32 	%f50, 0fc0000000;    	// -2
	mul.f32 	%f51, %f47, %f50;
	ld.global.f32 	%f52, [%r15+4];
	mul.f32 	%f53, %f52, %f48;
	mad.f32 	%f54, %f1, %f49, %f53;
	mad.f32 	%f55, %f2, %f51, %f54;
	.loc	2	57	0
	ld.global.f32 	%f56, [%r15+20];
	mul.f32 	%f57, %f56, %f48;
	mad.f32 	%f58, %f11, %f49, %f57;
	mad.f32 	%f59, %f12, %f51, %f58;
	.loc	2	58	0
	ld.global.f32 	%f60, [%r15+36];
	mul.f32 	%f61, %f60, %f48;
	mad.f32 	%f62, %f21, %f49, %f61;
	mad.f32 	%f63, %f22, %f51, %f62;
	.loc	2	123	0
	rcp.approx.f32 	%f64, %f55;
	mov.f32 	%f65, 0f3f800000;    	// 1
	sub.f32 	%f66, %f65, %f10;
	mov.f32 	%f67, 0fbf800000;    	// -1
	sub.f32 	%f68, %f67, %f10;
	rcp.approx.f32 	%f69, %f59;
	mov.f32 	%f70, 0f3f800000;    	// 1
	sub.f32 	%f71, %f70, %f20;
	mov.f32 	%f72, 0fbf800000;    	// -1
	sub.f32 	%f73, %f72, %f20;
	rcp.approx.f32 	%f74, %f63;
	mov.f32 	%f75, 0f3f800000;    	// 1
	sub.f32 	%f76, %f75, %f30;
	mov.f32 	%f77, 0fbf800000;    	// -1
	sub.f32 	%f78, %f77, %f30;
	mul.f32 	%f79, %f64, %f66;
	mul.f32 	%f80, %f64, %f68;
	mul.f32 	%f81, %f69, %f71;
	mul.f32 	%f82, %f69, %f73;
	mul.f32 	%f83, %f74, %f76;
	mul.f32 	%f84, %f74, %f78;
	min.f32 	%f85, %f79, %f80;
	max.f32 	%f86, %f79, %f80;
	min.f32 	%f87, %f81, %f82;
	min.f32 	%f88, %f83, %f84;
	max.f32 	%f89, %f85, %f87;
	max.f32 	%f90, %f85, %f88;
	max.f32 	%f91, %f89, %f90;
	max.f32 	%f92, %f81, %f82;
	min.f32 	%f93, %f86, %f92;
	max.f32 	%f94, %f83, %f84;
	min.f32 	%f95, %f86, %f94;
	min.f32 	%f96, %f93, %f95;
	setp.lt.f32 	%p2, %f91, %f96;
	@%p2 bra 	$Lt_0_3330;
	bra.uni 	$LBB7_transformKernel;
$Lt_0_3330:
	.loc	2	138	0
	mov.f32 	%f97, 0f00000000;    	// 0
	setp.lt.f32 	%p3, %f91, %f97;
	mov.f32 	%f98, 0f00000000;    	// 0
	selp.f32 	%f99, %f98, %f91, %p3;
	mad.f32 	%f100, %f55, %f99, %f10;
	mov.f32 	%f101, 0f3f000000;   	// 0.5
	add.f32 	%f102, %f100, %f101;
	mov.f32 	%f103, %f102;
	ld.param.f32 	%f104, [__cudaparm_transformKernel_transferOffset];
	mad.f32 	%f105, %f59, %f99, %f20;
	mov.f32 	%f106, 0f3f000000;   	// 0.5
	add.f32 	%f107, %f105, %f106;
	add.f32 	%f108, %f104, %f107;
	mov.f32 	%f109, %f108;
	mad.f32 	%f110, %f63, %f99, %f30;
	mov.f32 	%f111, 0f3f000000;   	// 0.5
	add.f32 	%f112, %f110, %f111;
	mov.f32 	%f113, %f112;
	mov.f32 	%f114, 0f00000000;   	// 0
	mov.f32 	%f115, %f114;
	tex.3d.v4.u32.f32 {%r16,%r17,%r18,%r19},[tex,{%f103,%f109,%f113,%f115}];
	mov.s32 	%r20, %r16;
	.loc	2	144	0
	mov.s32 	%r21, %r20;
	mov.b32 	%f116, %r21;
	cvt.sat.f32.f32 	%f117, %f116;
	mov.f32 	%f118, 0f437f0000;   	// 255
	mul.f32 	%f119, %f117, %f118;
	cvt.rzi.u32.f32 	%r22, %f119;
	shl.b32 	%r23, %r22, 8;
	or.b32 	%r24, %r22, %r23;
	shl.b32 	%r25, %r22, 16;
	shl.b32 	%r26, %r22, 24;
	or.b32 	%r27, %r25, %r26;
	or.b32 	%r28, %r24, %r27;
	ld.param.u32 	%r29, [__cudaparm_transformKernel_d_output];
	.loc	2	97	0
	ld.param.u32 	%r8, [__cudaparm_transformKernel_imageW];
	.loc	2	144	0
	mul.lo.u32 	%r30, %r6, %r8;
	add.u32 	%r31, %r4, %r30;
	mul.lo.u32 	%r32, %r31, 4;
	add.u32 	%r33, %r29, %r32;
	st.global.u32 	[%r33+0], %r28;
$LBB7_transformKernel:
	.loc	2	145	0
	exit;
$LDWend_transformKernel:
	} // transformKernel
	.tex .u32 texture_float_1D;

